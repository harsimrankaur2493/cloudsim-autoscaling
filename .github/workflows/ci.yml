name: CloudSim Auto-Scaling CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    - name: Create libs directory
      run: mkdir -p libs

    - name: Download Commons Math JAR
      run: |
        wget https://repo1.maven.org/maven2/org/apache/commons/commons-math4-legacy/4.0-beta1/commons-math4-legacy-4.0-beta1.jar -O libs/commons-math4-legacy-4.0-beta1.jar

    - name: Setup CloudSim
      run: |
        # Download CloudSim source
        wget https://github.com/Cloudslab/cloudsim/archive/refs/tags/cloudsim-3.0.3.zip -O cloudsim-3.0.3.zip
        unzip cloudsim-3.0.3.zip
        
        # Build CloudSim from source
        cd cloudsim-cloudsim-3.0.3/modules/cloudsim
        mvn clean install -DskipTests -Dmaven.javadoc.skip=true
        
        # Copy the built JAR to libs directory
        cp target/cloudsim-3.0.3.jar ../../../libs/
        
        # Install JAR to local Maven repo
        cd ../../../
        mvn install:install-file -Dfile=libs/cloudsim-3.0.3.jar -DgroupId=org.cloudbus.cloudsim -DartifactId=cloudsim -Dversion=3.0.3 -Dpackaging=jar

    - name: Build with Maven
      run: mvn -B package

    - name: Run Auto-Scaling Tests with Logging
      run: mvn -B test -Dtest=AutoScalingTests -DtrimStackTrace=false

    - name: Run Dynamic Auto-Scaling Simulation
      run: |
        echo "Running DynamicAutoScalingSimulation..."
        mvn exec:java -Dexec.mainClass="org.cloudbus.cloudsim.examples.DynamicAutoScalingSimulation" -Dexec.classpathScope=test | tee simulation-output.log
        
        # Validate expected output
        if grep -q "Starting Dynamic Auto-Scaling Simulation" simulation-output.log && \
           grep -q "AutoScalingBroker is starting" simulation-output.log && \
           grep -q "Simulation completed" simulation-output.log; then
          echo "Simulation ran successfully with expected output"
        else
          echo "Simulation output validation failed"
          exit 1
        fi

    - name: Upload Simulation Output
      uses: actions/upload-artifact@v4
      with:
        name: simulation-output
        path: simulation-output.log

    - name: Generate JaCoCo test coverage report
      run: mvn jacoco:report

    - name: Archive test reports
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: |
          target/site/jacoco/
          simulation-output.log